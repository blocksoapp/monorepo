# Generated by Django 4.1.1 on 2022-11-12 07:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, default='')),
                ('image', models.URLField(blank=True, default='')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain_id', models.PositiveSmallIntegerField()),
                ('tx_hash', models.CharField(max_length=255)),
                ('block_signed_at', models.DateTimeField()),
                ('tx_offset', models.PositiveSmallIntegerField()),
                ('successful', models.BooleanField()),
                ('from_address', models.CharField(max_length=255)),
                ('to_address', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Socials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website', models.URLField(blank=True)),
                ('telegram', models.URLField(blank=True)),
                ('discord', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('opensea', models.URLField(blank=True)),
                ('looksrare', models.URLField(blank=True)),
                ('snapshot', models.URLField(blank=True)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='socials', to='blockso_app.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('imgUrl', models.URLField(blank=True)),
                ('isShare', models.BooleanField()),
                ('isQuote', models.BooleanField()),
                ('created', models.DateTimeField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='blockso_app.profile')),
                ('refPost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blockso_app.post')),
                ('refTx', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blockso_app.transaction')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('viewed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='blockso_app.profile')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='MentionedInCommentEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blockso_app.comment')),
                ('mentioned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blockso_app.profile')),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mentioned_in_comment_event', to='blockso_app.notification')),
            ],
        ),
        migrations.CreateModel(
            name='FollowedEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('follow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blockso_app.follow')),
                ('followed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blockso_app.profile')),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='followed_event', to='blockso_app.notification')),
            ],
        ),
        migrations.AddField(
            model_name='follow',
            name='dest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_dest', to='blockso_app.profile'),
        ),
        migrations.AddField(
            model_name='follow',
            name='src',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_src', to='blockso_app.profile'),
        ),
        migrations.CreateModel(
            name='ERC721Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_address', models.CharField(max_length=255)),
                ('contract_name', models.CharField(max_length=255)),
                ('contract_ticker', models.CharField(max_length=255)),
                ('logo_url', models.URLField()),
                ('from_address', models.CharField(max_length=255)),
                ('to_address', models.CharField(max_length=255)),
                ('token_id', models.CharField(max_length=255)),
                ('tx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='erc721_transfers', to='blockso_app.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='ERC20Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_address', models.CharField(max_length=255)),
                ('contract_name', models.CharField(max_length=255)),
                ('contract_ticker', models.CharField(max_length=255)),
                ('logo_url', models.URLField()),
                ('from_address', models.CharField(max_length=255)),
                ('to_address', models.CharField(max_length=255)),
                ('amount', models.CharField(max_length=255)),
                ('decimals', models.PositiveSmallIntegerField()),
                ('tx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='erc20_transfers', to='blockso_app.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='CommentOnPostEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blockso_app.comment')),
                ('commentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blockso_app.profile')),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='comment_on_post_event', to='blockso_app.notification')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blockso_app.post')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blockso_app.profile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to='blockso_app.post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='tagged_users',
            field=models.ManyToManyField(blank=True, to='blockso_app.profile'),
        ),
        migrations.AddConstraint(
            model_name='follow',
            constraint=models.UniqueConstraint(fields=('src', 'dest'), name='cannot follow twice constraint'),
        ),
        migrations.AddConstraint(
            model_name='follow',
            constraint=models.CheckConstraint(check=models.Q(('src__exact', models.F('dest')), _negated=True), name='cannot follow oneself constraint'),
        ),
    ]
